// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                Int             @id @default(autoincrement())
  nome              String
  email             String          @unique
  senha             String
  tipo              String
  ativo             Boolean         @default(true)
  criadoEm          DateTime        @default(now())
  atualizadoEm      DateTime        @updatedAt
  escolas           EscolaUsuario[]
  avaliacoesAplicadas Avaliacao[]
}

model Regiao {
  id           Int       @id @default(autoincrement())
  nome         String
  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt
  escolas      Escola[]
}

model Grupo {
  id           Int       @id @default(autoincrement())
  nome         String
  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt
  escolas      Escola[]
}

model Escola {
  id           Int             @id @default(autoincrement())
  nome         String
  regiaoId     Int
  regiao       Regiao          @relation(fields: [regiaoId], references: [id])
  grupoId      Int?
  grupo        Grupo?          @relation(fields: [grupoId], references: [id])
  criadoEm     DateTime        @default(now())
  atualizadoEm DateTime        @updatedAt
  turmas       Turma[]
  usuarios     EscolaUsuario[]
}

model EscolaUsuario {
  id        Int      @id @default(autoincrement())
  escolaId  Int
  escola    Escola   @relation(fields: [escolaId], references: [id])
  usuarioId Int
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
  criadoEm  DateTime @default(now())

  @@unique([escolaId, usuarioId])
}

model AnoEscolar {
  id           Int       @id @default(autoincrement())
  nome         String
  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt
  turmas       Turma[]
}

model Turma {
  id           Int       @id @default(autoincrement())
  nome         String
  escolaId     Int
  escola       Escola    @relation(fields: [escolaId], references: [id])
  anoEscolarId Int
  anoEscolar   AnoEscolar @relation(fields: [anoEscolarId], references: [id])
  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt
  alunos       Aluno[]
}

model Aluno {
  id            Int          @id @default(autoincrement())
  nome          String
  dataNascimento DateTime?
  turmaId       Int
  turma         Turma        @relation(fields: [turmaId], references: [id])
  criadoEm      DateTime     @default(now())
  atualizadoEm  DateTime     @updatedAt
  avaliacoes    Avaliacao[]
}

model EventoAvaliacao {
  id           Int          @id @default(autoincrement())
  nome         String
  dataInicio   DateTime
  dataFim      DateTime
  ativo        Boolean      @default(true)
  criadoEm     DateTime     @default(now())
  atualizadoEm DateTime     @updatedAt
  avaliacoes   Avaliacao[]
}

model Avaliacao {
  id               Int             @id @default(autoincrement())
  alunoId          Int
  aluno            Aluno           @relation(fields: [alunoId], references: [id])
  eventoId         Int
  evento           EventoAvaliacao @relation(fields: [eventoId], references: [id])
  aplicadorId      Int
  aplicador        Usuario         @relation(fields: [aplicadorId], references: [id])
  palavrasPorMinuto Int
  precisao         Float
  fluencia         Float
  compreensao      Float
  nivelLeitura     String
  observacoes      String?
  dataAvaliacao    DateTime
  criadoEm         DateTime        @default(now())
  atualizadoEm     DateTime        @updatedAt
} 